#include <stdlib.h>
#include <stdint.h>

#include <obliv.oh>

#include "dbg.h"
#include "mpfss_naive.h"
#include "mpfss_naive.oh"
#include "mpfss_cuckoo.oh"
#include "create_structs.h"
#include "create_structs.oh"
#include "parallel.h"

void call_dpf_threaded(void * params_less){



	void ** params = (void **) params_less;
	int index_non_obliv=*(params[0]);
	bool **dpf_vectors = (bool **) params[1];
	uint8_t *** dpf_value_vectors= (uint8_t ***) params[2];
	int * bucket_lenghts=(int *)params[3];
	bool cprg= (bool) params[4];
	int i= (int) params[5];


	  	bool *local_bit_output;
	  	uint8_t *local_output;

		dpf_with_beta( 		(size_t) bucket_lenghts[i],
							index_non_obliv, 
							me->beta, 
							i,  									
							&local_bit_output,
							&local_output,
							cprg);	

	  	
		dpf_vectors[i]=local_bit_output;
		dpf_value_vectors[i]=local_output;

}